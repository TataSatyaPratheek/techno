[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "techno"
version = "0.1.0"
description = "A comprehensive techno music generation system"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "Techno Generator Team"},
]
maintainers = [
    {name = "Techno Generator Team"},
]
keywords = ["music", "generation", "techno", "audio", "synthesis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
]
dependencies = [
    "click>=8.0.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pydub>=0.25.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0",
    "types-PyYAML>=6.0",
    "black==25.9.0",
    "isort==7.0.0",
    "flake8==7.3.0",
    "mypy==1.18.2",
    "typing-extensions>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.scripts]
techno = "techno.cli.main:main"

[project.urls]
Homepage = "https://github.com/yourusername/techno"
Documentation = "https://techno.readthedocs.io/"
Repository = "https://github.com/yourusername/techno.git"
Issues = "https://github.com/yourusername/techno/issues"
Changelog = "https://github.com/yourusername/techno/blob/main/CHANGELOG.md"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=techno --cov-report=term-missing --cov-report=html"
pythonpath = ["src"]
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["techno"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.build]
# Map the package root to `src/` and list the package name explicitly.
# This keeps the `src/` development layout while ensuring the wheel
# installs a top-level `techno` package.
package-dir = { "" = "src" }
packages = ["techno"]

[tool.hatch.build.targets.wheel]
packages = ["techno"]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0",
    "types-pyyaml>=6.0.12.20250915",
    "black==25.9.0",
    "isort==7.0.0",
    "flake8==7.3.0",
    "mypy==1.18.2",
    "typing-extensions>=4.0.0",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
namespace_packages = false
mypy_path = "src"

[[tool.mypy.overrides]]
module = "techno.*"
ignore_missing_imports = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 127

[tool.flake8]
exclude = [
    ".venv",
    "__pycache__",
    "build",
    "dist",
]
max-line-length = 127
extend-ignore = ["E203", "W503"]
